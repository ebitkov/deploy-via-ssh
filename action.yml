name: 'Deploy via SSH'
description: 'Deploys files to a remote server via SSH'

inputs:
  ssh-private-key:
    description: 'A private SSH key. The public fingerprint must be added to the server'
    required: true
  ssh-host:
    description: 'The address (IP or DNS) of the remote server'
    required: true
  ssh-user:
    description: 'SSH username'
    required: true
  deployment-path:
    description: 'Relative path from mount location where to upload files to'
    required: true
  ignored-files:
    description: 'Files or paths to ignore from upload'
    required: false
    default: ./.git ./.github ./node_modules ./tests ./.env.local

  post-upload-commands:
    description: 'Commands to run after deployment'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ inputs.ssh-private-key }}
        known_hosts: '--placeholder-host'

    - name: Adding known hosts
      run: ssh-keyscan -H ${{ inputs.ssh-host }} >> ~/.ssh/known_hosts
      shell: bash

    - name: Remove redundant files
      run: rm -fr ${{ inputs.ignored-files }}
      shell: bash

    - name: Create archive
      run: tar -zcvf ../build.tar.gz .
      shell: bash

    - name: Deploy with scp
      run: scp ../build.tar.gz ${{ inputs.ssh-user }}@${{ inputs.ssh-host }}:${{ inputs.deployment-path }}
      shell: bash

    - name: Extract archive on remote host
      run: ssh ${{ inputs.ssh-user }}@${{ inputs.ssh-host }} 'cd ${{ inputs.deployment-path }}; tar -xf build.tar.gz; rm build.tar.gz'
      shell: bash

    - name: Post-Upload Commands
      if: ${{ inputs.post-upload-commands != '' }}
      run: ssh ${{ inputs.ssh-user }}@${{ inputs.ssh-host }} 'cd ${{ inputs.deployment-path }}; ${{ inputs.post-upload-commands }}'
      shell: bash